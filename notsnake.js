const vectors = {
  RIGHT: { dx: 1, dy: 0 },
  LEFT: { dx: -1, dy: 0 },
  DOWN: { dx: 0, dy: 1 },
  UP: { dx: 0, dy: -1 },
}

const calcPos = (v, dv, lim) => {
  const newV = v + dv
  if (!lim) return newV
  if (newV < 0) return lim + newV
  if (newV > lim - 1) return newV - lim
  return newV
}

const chapter1 = (grid, direction, infinite, eat) => {
  const cells = grid.split('\n').map(r => r.split(''))
  const output = [...cells.map(r => [...r])]
  for (let y = 0; y < cells.length; y++) {
    for (let x = 0; x < cells[y].length; x++) {
      if (cells[y][x] === 'o' || cells[y][x] === 'O') {
        const { dy, dx } = vectors[direction]
        const newY = calcPos(y, dy, infinite ? cells.length : 0)
        const newX = calcPos(x, dx, infinite ? cells[y].length : 0)
        console.log(eat, cells[newY][newX], output[y][x])
        if (eat) {
          if (cells[newY][newX] === 'x') {
            output[y][x] = 'o'
            output[newY][newX] = 'O'
          } else {
            output[y][x] = '.'
            output[newY][newX] = 'o'
          }
        } else {
          output[y][x] = '.'
          output[newY][newX] = 'o'
        }
      }
    }
  }
  return output.map(r => r.join('')).join('\n')
}

const chapter2 = (grid, direction, eat) => {
  return chapter1(grid, direction, true, eat)
}

const chapter3 = (grid, directions, eat) => {
  for (const direction of directions.split(',')) {
    console.log(grid)
    grid = chapter2(grid, direction, eat)
  }
  return grid
}

const chapter4 = (grid, directions) => {
  return chapter3(grid, directions, true)
}

console.log('Chapter 1')
console.log(chapter1(`.....
.o...
.....
.....
.....`, 'RIGHT'))

console.log('Example 1')
console.log(chapter1(`.....
..o..
.....
.....
.....`, 'LEFT'))

console.log('Example 2')
console.log(chapter1(`.....
.....
.....
.o...
.....`, 'DOWN'))

console.log('Example 3')
console.log(chapter1(`.....
.....
.....
.....
....o`, 'UP'))

console.log('Chapter 2')
console.log(chapter2(`.....
.....
.....
o....
.....`, 'LEFT'))

console.log('Example 4')
console.log(chapter2(`..o..
.....
.....
.....
.....`, 'UP'))

console.log('Example 5')
console.log(chapter2(`.....
.....
.....
....o
.....`, 'RIGHT'))

console.log('Example 6')
console.log(chapter2(`.....
.....
.....
.....
....o`, 'DOWN'))

console.log('Chapter 3')
console.log(chapter3(`.....
.....
.o...
.....
.....`, 'RIGHT,UP,LEFT,LEFT'))

console.log('Example 7')
console.log(chapter3(`..o..
.....
.....
.....
.....`, 'RIGHT,RIGHT,DOWN,DOWN'))

console.log('Example 8')
console.log(chapter3(`.....
.....
.....
....o
.....`, 'LEFT,DOWN,LEFT,LEFT,UP,RIGHT'))

console.log('Example 9')
console.log(chapter3(`.....
.....
.....
.....
....o`, 'RIGHT,DOWN,LEFT,UP,UP,LEFT'))

console.log('Chapter 4')
console.log(chapter4(`.....
.....
o.x..
.....
.....`, 'RIGHT,RIGHT,RIGHT'))
